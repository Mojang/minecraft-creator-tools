{"$schema":"http://json-schema.org/draft-07/schema","$id":"blockception.minecraft.behavior.worldgen.jigsaw_structures.jigsaw","type":"object","title":"Jigsaw","description":"A Jigsaw Structure is a group of Structure Templates that make up a larger structure. Jigsaw Structures are placed during world generation.","required":["format_version","minecraft:jigsaw"],"additionalProperties":false,"properties":{"format_version":{"$ref":"#/definitions/A"},"minecraft:jigsaw":{"$ref":"#/definitions/B"}},"definitions":{"A":{"title":"Format Version","description":"A version that tells minecraft what type of data format can be expected when reading this file.","pattern":"^([1-9]+)\\.([0-9]+)\\.([0-9]+)$","type":"string","default":"1.21.60","examples":["1.21.50","1.20.80","1.20.40","1.19.0","1.12.0","1.10.0","1.8.0"],"defaultSnippets":[{"label":"New Format version","body":"1.${1|8,10,12,17,18,19,20|}.${3|2|0|}"}]},"C_filters_spec":{"defaultSnippets":[{"label":"New Test","body":{"test":"$1","value":"$2"}},{"label":"New All_of Test","body":{"all_of":[{"test":"$1","value":"$2"},{"test":"$3","value":"$4"}]}},{"label":"New Any_of Test","body":{"any_of":[{"test":"$1","value":"$2"},{"test":"$3","value":"$4"}]}},{"label":"New None_of Test","body":{"none_of":[{"test":"$1","value":"$2"},{"test":"$3","value":"$4"}]}}],"examples":[{"all_of":[{}]},{"any_of":[{}]},{"none_of":[{}]}],"oneOf":[{"propertyNames":{"enum":["all_of","any_of","none_of"]},"properties":{"all_of":{"title":"All Of","description":"All tests in an `all_of` group must pass in order for the group to pass.","$ref":"#/definitions/C_groups_spec"},"any_of":{"title":"Any Of","description":"One or more tests in an `any_of` group must pass in order for the group to pass.","$ref":"#/definitions/C_groups_spec"},"none_of":{"title":"None Of","description":"All tests in a `none_of` group must fail in order for the group to pass.","$ref":"#/definitions/C_groups_spec"}}},{"required":["test"],"properties":{"all_of":{"title":"All Of","description":"All tests in an `all_of` group must pass in order for the group to pass.","$ref":"#/definitions/C_groups_spec"},"any_of":{"title":"Any Of","description":"One or more tests in an `any_of` group must pass in order for the group to pass.","$ref":"#/definitions/C_groups_spec"},"none_of":{"title":"None Of","description":"All tests in a `none_of` group must fail in order for the group to pass.","$ref":"#/definitions/C_groups_spec"}},"allOf":[{"if":{"properties":{"test":{"const":"actor_health"}}},"then":{"$ref":"#/definitions/D"}},{"if":{"properties":{"test":{"const":"all_slots_empty"}}},"then":{"$ref":"#/definitions/G"}},{"if":{"properties":{"test":{"const":"any_slots_empty"}}},"then":{"$ref":"#/definitions/I"}},{"if":{"properties":{"test":{"const":"bool_property"}}},"then":{"$ref":"#/definitions/J"}},{"if":{"properties":{"test":{"const":"clock_time"}}},"then":{"$ref":"#/definitions/BA"}},{"if":{"properties":{"test":{"const":"distance_to_nearest_player"}}},"then":{"$ref":"#/definitions/BB"}},{"if":{"properties":{"test":{"const":"enum_property"}}},"then":{"$ref":"#/definitions/BC"}},{"if":{"properties":{"test":{"const":"float_property"}}},"then":{"$ref":"#/definitions/BD"}},{"if":{"properties":{"test":{"const":"has_ability"}}},"then":{"$ref":"#/definitions/BE"}},{"if":{"properties":{"test":{"const":"has_biome_tag"}}},"then":{"$ref":"#/definitions/BF"}},{"if":{"properties":{"test":{"const":"has_component"}}},"then":{"$ref":"#/definitions/BG"}},{"if":{"properties":{"test":{"const":"has_container_open"}}},"then":{"$ref":"#/definitions/BH"}},{"if":{"properties":{"test":{"const":"has_damage"}}},"then":{"$ref":"#/definitions/BI"}},{"if":{"properties":{"test":{"const":"has_equipment"}}},"then":{"$ref":"#/definitions/BJ"}},{"if":{"properties":{"test":{"const":"has_equipment_tag"}}},"then":{"$ref":"#/definitions/CB"}},{"if":{"properties":{"test":{"const":"has_damaged_equipment"}}},"then":{"$ref":"#/definitions/CC"}},{"if":{"properties":{"test":{"const":"has_mob_effect"}}},"then":{"$ref":"#/definitions/CD"}},{"if":{"properties":{"test":{"const":"has_nametag"}}},"then":{"$ref":"#/definitions/CF"}},{"if":{"properties":{"test":{"const":"has_property"}}},"then":{"$ref":"#/definitions/CG"}},{"if":{"properties":{"test":{"const":"has_ranged_weapon"}}},"then":{"$ref":"#/definitions/CH"}},{"if":{"properties":{"test":{"const":"has_silk_touch"}}},"then":{"$ref":"#/definitions/CI"}},{"if":{"properties":{"test":{"const":"has_tag"}}},"then":{"$ref":"#/definitions/CJ"}},{"if":{"properties":{"test":{"const":"has_target"}}},"then":{"$ref":"#/definitions/DA"}},{"if":{"properties":{"test":{"const":"has_trade_supply"}}},"then":{"$ref":"#/definitions/DB"}},{"if":{"properties":{"test":{"const":"home_distance"}}},"then":{"$ref":"#/definitions/DC"}},{"if":{"properties":{"test":{"const":"hourly_clock_time"}}},"then":{"$ref":"#/definitions/DD"}},{"if":{"properties":{"test":{"const":"in_block"}}},"then":{"$ref":"#/definitions/DE"}},{"if":{"properties":{"test":{"const":"in_caravan"}}},"then":{"$ref":"#/definitions/DF"}},{"if":{"properties":{"test":{"const":"in_clouds"}}},"then":{"$ref":"#/definitions/DG"}},{"if":{"properties":{"test":{"const":"in_contact_with_water"}}},"then":{"$ref":"#/definitions/DH"}},{"if":{"properties":{"test":{"const":"in_lava"}}},"then":{"$ref":"#/definitions/DI"}},{"if":{"properties":{"test":{"const":"in_nether"}}},"then":{"$ref":"#/definitions/DJ"}},{"if":{"properties":{"test":{"const":"in_overworld"}}},"then":{"$ref":"#/definitions/EA"}},{"if":{"properties":{"test":{"const":"in_water_or_rain"}}},"then":{"$ref":"#/definitions/EB"}},{"if":{"properties":{"test":{"const":"in_water"}}},"then":{"$ref":"#/definitions/EC"}},{"if":{"properties":{"test":{"const":"inactivity_timer"}}},"then":{"$ref":"#/definitions/ED"}},{"if":{"properties":{"test":{"const":"int_property"}}},"then":{"$ref":"#/definitions/EE"}},{"if":{"properties":{"test":{"const":"is_altitude"}}},"then":{"$ref":"#/definitions/EF"}},{"if":{"properties":{"test":{"const":"is_avoiding_mobs"}}},"then":{"$ref":"#/definitions/EG"}},{"if":{"properties":{"test":{"const":"is_biome"}}},"then":{"$ref":"#/definitions/EH"}},{"if":{"properties":{"test":{"const":"is_block"}}},"then":{"$ref":"#/definitions/EI"}},{"if":{"properties":{"test":{"const":"is_bound_to_creaking_heart"}}},"then":{"$ref":"#/definitions/EJ"}},{"if":{"properties":{"test":{"const":"is_brightness"}}},"then":{"$ref":"#/definitions/FA"}},{"if":{"properties":{"test":{"const":"is_climbing"}}},"then":{"$ref":"#/definitions/FB"}},{"if":{"properties":{"test":{"const":"is_color"}}},"then":{"$ref":"#/definitions/FC"}},{"if":{"properties":{"test":{"const":"is_daytime"}}},"then":{"$ref":"#/definitions/FD"}},{"if":{"properties":{"test":{"const":"is_difficulty"}}},"then":{"$ref":"#/definitions/FE"}},{"if":{"properties":{"test":{"const":"is_family"}}},"then":{"$ref":"#/definitions/FF"}},{"if":{"properties":{"test":{"const":"is_game_rule"}}},"then":{"$ref":"#/definitions/FG"}},{"if":{"properties":{"test":{"const":"is_humid"}}},"then":{"$ref":"#/definitions/FH"}},{"if":{"properties":{"test":{"const":"is_immobile"}}},"then":{"$ref":"#/definitions/FI"}},{"if":{"properties":{"test":{"const":"is_in_village"}}},"then":{"$ref":"#/definitions/FJ"}},{"if":{"properties":{"test":{"const":"is_leashed_to"}}},"then":{"$ref":"#/definitions/GA"}},{"if":{"properties":{"test":{"const":"is_leashed"}}},"then":{"$ref":"#/definitions/GB"}},{"if":{"properties":{"test":{"const":"is_mark_variant"}}},"then":{"$ref":"#/definitions/GC"}},{"if":{"properties":{"test":{"const":"is_missing_health"}}},"then":{"$ref":"#/definitions/GD"}},{"if":{"properties":{"test":{"const":"is_moving"}}},"then":{"$ref":"#/definitions/GE"}},{"if":{"properties":{"test":{"const":"is_navigating"}}},"then":{"$ref":"#/definitions/GE"}},{"if":{"properties":{"test":{"const":"is_owner"}}},"then":{"$ref":"#/definitions/GF"}},{"if":{"properties":{"test":{"const":"is_persistent"}}},"then":{"$ref":"#/definitions/GG"}},{"if":{"properties":{"test":{"const":"is_riding_self"}}},"then":{"$ref":"#/definitions/GH"}},{"if":{"properties":{"test":{"const":"is_riding"}}},"then":{"$ref":"#/definitions/GI"}},{"if":{"properties":{"test":{"const":"is_skin_id"}}},"then":{"$ref":"#/definitions/GJ"}},{"if":{"properties":{"test":{"const":"is_sleeping"}}},"then":{"$ref":"#/definitions/HA"}},{"if":{"properties":{"test":{"const":"is_sneak_held"}}},"then":{"$ref":"#/definitions/HB"}},{"if":{"properties":{"test":{"const":"is_sneaking"}}},"then":{"$ref":"#/definitions/HC"}},{"if":{"properties":{"test":{"const":"is_snow_covered"}}},"then":{"$ref":"#/definitions/HD"}},{"if":{"properties":{"test":{"const":"is_sitting"}}},"then":{"$ref":"#/definitions/HE"}},{"if":{"properties":{"test":{"const":"is_target"}}},"then":{"$ref":"#/definitions/HF"}},{"if":{"properties":{"test":{"const":"is_temperature_type"}}},"then":{"$ref":"#/definitions/HG"}},{"if":{"properties":{"test":{"const":"is_temperature_value"}}},"then":{"$ref":"#/definitions/HH"}},{"if":{"properties":{"test":{"const":"is_underground"}}},"then":{"$ref":"#/definitions/HI"}},{"if":{"properties":{"test":{"const":"is_underwater"}}},"then":{"$ref":"#/definitions/HJ"}},{"if":{"properties":{"test":{"const":"is_variant"}}},"then":{"$ref":"#/definitions/IA"}},{"if":{"properties":{"test":{"const":"is_visible"}}},"then":{"$ref":"#/definitions/IB"}},{"if":{"properties":{"test":{"const":"is_waterlogged"}}},"then":{"$ref":"#/definitions/IC"}},{"if":{"properties":{"test":{"const":"light_level"}}},"then":{"$ref":"#/definitions/ID"}},{"if":{"properties":{"test":{"const":"moon_intensity"}}},"then":{"$ref":"#/definitions/IE"}},{"if":{"properties":{"test":{"const":"moon_phase"}}},"then":{"$ref":"#/definitions/IF"}},{"if":{"properties":{"test":{"const":"on_ground"}}},"then":{"$ref":"#/definitions/IG"}},{"if":{"properties":{"test":{"const":"on_ladder"}}},"then":{"$ref":"#/definitions/IH"}},{"if":{"properties":{"test":{"const":"random_chance"}}},"then":{"$ref":"#/definitions/II"}},{"if":{"properties":{"test":{"const":"rider_count"}}},"then":{"$ref":"#/definitions/IJ"}},{"if":{"properties":{"test":{"const":"surface_mob"}}},"then":{"$ref":"#/definitions/JA"}},{"if":{"properties":{"test":{"const":"taking_fire_damage"}}},"then":{"$ref":"#/definitions/JB"}},{"if":{"properties":{"test":{"const":"target_distance"}}},"then":{"$ref":"#/definitions/JC"}},{"if":{"properties":{"test":{"const":"owner_distance"}}},"then":{"$ref":"#/definitions/JD"}},{"if":{"properties":{"test":{"const":"trusts"}}},"then":{"$ref":"#/definitions/JE"}},{"if":{"properties":{"test":{"const":"weather_at_position"}}},"then":{"$ref":"#/definitions/JF"}},{"if":{"properties":{"test":{"const":"weather"}}},"then":{"$ref":"#/definitions/JG"}},{"not":{"properties":{"test":{"const":"is_weather"}},"$comment":"DEPRECATED"}}]}]},"C_groups_spec":{"oneOf":[{"type":"array","items":{"$ref":"#/definitions/C_groups_spec"}},{"type":"object","$ref":"#/definitions/C_filters_spec"}]},"E":{"title":"Operator","type":"string","description":"The comparison to apply with `value`.","default":"equals","enum":["!=","<","<=","<>","=","==",">",">=","equals","not"]},"F":{"title":"Subject","type":"string","description":"The subject of this filter test.","default":"self","enum":["block","other","parent","player","self","target","damager"]},"D":{"type":"object","title":"Actor Health","description":"Tests the health of the subject.","required":["value"],"examples":[{"test":"actor_health","value":10}],"properties":{"test":{"type":"string","title":"Test Property","description":"Tests the health of the subject."},"operator":{"$ref":"#/definitions/E","description":"(Optional) The comparison to apply with `value`.","default":"equals","title":"Operator"},"subject":{"$ref":"#/definitions/F","description":"(Optional) The subject of this filter test.","default":"self","title":"Subject"},"value":{"type":"integer","description":"(Required) A integer value.","title":"Value","examples":[0,1]}}},"H":{"title":"Equipment Location","type":"string","description":"The equipment location to test.","default":"self","enum":["any","armor","feet","hand","head","inventory","leg","torse"]},"G":{"type":"object","title":"All Slots Empty","description":"Returns true when the designated equipment location for the subject entity is completely empty.","required":["value"],"examples":[{"test":"all_slots_empty","subject":"self","operator":"equals","value":"any"},{"test":"all_slots_empty"}],"properties":{"test":{"type":"string","title":"Test Property","description":"Returns true when the designated equipment location for the subject entity is completely empty."},"operator":{"$ref":"#/definitions/E","description":"(Optional) The comparison to apply with `value`.","default":"equals","title":"Operator"},"subject":{"$ref":"#/definitions/F","description":"(Optional) The subject of this filter test.","default":"self","title":"Subject"},"value":{"title":"Value","description":"The equipment location to test.","type":"integer","$ref":"#/definitions/H"}}},"I":{"type":"object","title":"Any Slots Empty","description":"Returns true when the designated equipment location for the subject entity has any empty slot.","required":["value"],"examples":[{"test":"any_slots_empty","subject":"self","operator":"equals","value":"any"},{"test":"Any_slots_empty"}],"properties":{"test":{"type":"string","title":"Test Property","description":"Returns true when the designated equipment location for the subject entity has any empty slot."},"operator":{"$ref":"#/definitions/E","description":"(Optional) The comparison to apply with `value`.","default":"equals","title":"Operator"},"subject":{"$ref":"#/definitions/F","description":"(Optional) The subject of this filter test.","default":"self","title":"Subject"},"value":{"title":"Value","description":"The equipment location to test.","type":"integer","$ref":"#/definitions/H"}}},"J":{"type":"object","title":"Bool Property","description":"Returns true when the bool actor property matches the value provided.","required":["domain"],"examples":[{"test":"bool_property","value":true}],"properties":{"test":{"type":"string","title":"Test Property","description":"Returns true when the bool actor property matches the value provided."},"domain":{"description":"(Required) The property name to look for","title":"Operator","type":"string"},"operator":{"$ref":"#/definitions/E","description":"(Optional) The comparison to apply with `value`.","default":"equals","title":"Operator"},"subject":{"$ref":"#/definitions/F","description":"(Optional) The subject of this filter test.","default":"self","title":"Subject"},"value":{"type":"boolean","default":true,"title":"Value","description":"true or false."}}},"BA":{"type":"object","title":"Clock Time","description":"Compares the current time with a float value in the range (0.0, 1.0).\n0.0= Noon\n0.25= Sunset\n0.5= Midnight\n0.75= Sunrise","required":["value"],"examples":[{"test":"clock_time","value":0.25}],"properties":{"test":{"type":"string","title":"Test Property","description":"Compares the current time with a float value in the range (0.0, 1.0).\n0.0= Noon\n0.25= Sunset\n0.5= Midnight\n0.75= Sunrise"},"operator":{"$ref":"#/definitions/E","description":"(Optional) The comparison to apply with `value`.","default":"equals","title":"Operator"},"subject":{"$ref":"#/definitions/F","description":"(Optional) The subject of this filter test.","default":"self","title":"Subject"},"value":{"type":"number","minimum":0,"maximum":24000,"description":"(Required) A floating point value.","title":"Value","examples":[0,0.025,0.5,0.75,1]}}},"BB":{"type":"object","title":"Distance To Nearest Player","description":"Compares the distance to the nearest Player with a float value.","required":["value"],"examples":[{"test":"distance_to_nearest_player","value":5.7}],"properties":{"test":{"type":"string","title":"Test Property","description":"Compares the distance to the nearest Player with a float value."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"type":"number","description":"(Required) A floating point value.","title":"Value"}}},"BC":{"type":"object","title":"Enum Property","description":"Returns true when the enum actor property matches the value provided.","required":["value","domain"],"examples":[{"test":"bool_property","value":true}],"properties":{"test":{"type":"string","title":"Test Property","description":"Returns true when the enum actor property matches the value provided."},"domain":{"description":"(Required) The property name to look for","title":"Operator","type":"string"},"operator":{"$ref":"#/definitions/E","description":"(Optional) The comparison to apply with `value`.","default":"equals","title":"Operator"},"subject":{"$ref":"#/definitions/F","description":"(Optional) The subject of this filter test.","default":"self","title":"Subject"},"value":{"type":"string","title":"Value","description":"(Required) A string value."}}},"BD":{"type":"object","title":"Float Property","description":"Returns true when the float actor property matches the value provided.","required":["value","domain"],"examples":[{"test":"float_property","value":1.0}],"properties":{"test":{"type":"string","title":"Test Property","description":"Returns true when the float actor property matches the value provided."},"domain":{"description":"(Required) The property name to look for","title":"Operator","type":"string"},"operator":{"$ref":"#/definitions/E","description":"(Optional) The comparison to apply with `value`.","default":"equals","title":"Operator"},"subject":{"$ref":"#/definitions/F","description":"(Optional) The subject of this filter test.","default":"self","title":"Subject"},"value":{"type":"number","title":"Value","description":"(Required) A floating point value."}}},"BE":{"type":"object","title":"Has Ability","description":"Returns true when the subject entity has the named ability.","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"Returns true when the subject entity has the named ability."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"type":"string","description":"(Required) The Ability type to test.","enum":["flySpeed","flying","instabuild","invulnerable","lightning","mayfly","mute","noclip","walkSpeed","worldbuilder","verticalFlySpeed"],"title":"Value"}},"examples":[{"test":"has_ability","value":"flySpeed"}]},"BF":{"type":"object","title":"Has Biome Tag","description":"Tests whether the biome the subject is in has the specified tag.","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"Tests whether the biome the subject is in has the specified tag."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"The tag to look for.","title":"Value","type":"string"}}},"BG":{"type":"object","title":"Has Component","description":"Returns true when the subject entity contains the named component.","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"Returns true when the subject entity contains the named component."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"type":"string","description":"(Required) The component name to look for.","title":"Value"}},"examples":[{"test":"has_component","value":"minecraft:explode"}]},"BH":{"type":"object","title":"Has Container Open","description":"Returns true when the subject Player entity has opened a container.","properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"(Optional) true or false.","title":"Value","type":"boolean","default":true}},"examples":[{"test":"has_container_open","value":true}]},"BI":{"type":"object","title":"Has Damage","description":"Returns true when the subject entity receives the named damage type. has_damage can also use subject and operator parameters but they are optional.","required":["value"],"examples":[{"test":"has_damage","value":"fatal"}],"properties":{"test":{"type":"string","title":"Test Property","description":"Returns true when the subject entity receives the named damage type."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"type":"string","description":"The Damage type to test.","title":"Value","enum":["anvil","attack","block_explosion","contact","drowning","entity_explosion","fall","falling_block","fatal","fire","fire_tick","fly_into_wall","lava","magic","none","override","piston","projectile","self_destruct","sonic_boom","stalactite","stalagmite","starve","suffocation","thorns","void","wither"]}}},"CA":{"description":"A minecraft item identifier.","pattern":"^[0-9a-zA-Z:_\\-\\.]+$","title":"Item Identifier","type":"string","defaultSnippets":[{"label":"New Identifier","body":"$1:$2"}]},"BJ":{"type":"object","title":"Has Equipment","description":"Tests for the presence of a named item in the designated slot of the subject entity.","required":["value"],"properties":{"test":{"type":"string","const":"has_equipment","description":"Tests for the presence of a named item in the designated slot of the subject entity.","title":"Test"},"domain":{"description":"The equipment location to test.","default":"any","enum":["any","inventory","armor","feet","hand","head","leg","torso"],"title":"Domain"},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"The item name to look for.","type":"string","$ref":"#/definitions/CA","title":"Value"}},"examples":[{"test":"has_equipment","value":"example"}]},"CB":{"type":"object","title":"Has Equipment Tag","description":"Tests for the presence of an item with the named tag in the designated slot of the subject entity.","required":["value"],"properties":{"test":{"type":"string","const":"has_equipment_tag","description":"Tests for the presence of an item with the named tag in the designated slot of the subject entity.","title":"Test"},"domain":{"description":"The equipment location to test.","default":"any","enum":["any","inventory","armor","feet","hand","head","leg","torso"],"title":"Domain"},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"The item name to look for.","type":"string","$ref":"#/definitions/CA","title":"Value"}},"examples":[{"test":"has_equipment_tag","value":"example"}]},"CC":{"type":"object","title":"Has Damaged Equipment","description":"Tests for the presence of a damaged named item in the designated slot of the subject entity.","required":["value"],"properties":{"test":{"type":"string","const":"has_damaged_equipment","description":"Tests for the presence of a damaged named item in the designated slot of the subject entity.","title":"Test"},"domain":{"description":"The equipment location to test.","default":"any","enum":["any","inventory","armor","feet","hand","head","leg","torso"],"title":"Domain"},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"The item name to look for.","type":"string","$ref":"#/definitions/CA","title":"Value"}},"examples":[{"test":"has_damaged_equipment","value":"example"}]},"CE":{"type":"string","title":"Effect","description":"A mob effect","enum":["absorption","bad_omen","blindness","conduit_power","darkness","fatal_poison","fire_resistance","haste","health_boost","hunger","infested","instant_damage","instant_health","invisibility","jump_boost","levitation","mining_fatigue","nausea","night_vision","oozing","poison","raid_omen","regeneration","resistance","saturation","slow_falling","slowness","speed","strength","trial_omen","village_hero","water_breathing","weakness","weaving","wind_charged","wither"]},"CD":{"type":"object","title":"Has Mob Effect","description":"Tests whether the Subject has the specified mob effect.","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"Tests whether the Subject has the specified mob effect."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"$ref":"#/definitions/CE","description":"The specified mob effect.","title":"Value"}},"examples":[{"test":"has_mob_effect","value":"bad_omen"}]},"CF":{"type":"object","title":"Has Equipment","description":"Tests for the presence of a named item in the designated slot of the subject entity.","required":["value"],"properties":{"test":{"type":"string","const":"has_nametag","description":"Tests for the presence of a named item in the designated slot of the subject entity.","title":"Test"},"domain":{"description":"The equipment location to test.","default":"any","enum":["any","armor","feet","hand","head","leg","torso"],"title":"Domain"},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"The namtag to look for","type":"boolean","title":"Value"}},"examples":[{"test":"has_nametag","value":false},{"test":"has_nametag","value":true}]},"CG":{"type":"object","title":"Has Property","description":"Tests for the presence of a property of the subject entity.","required":["value","domain"],"examples":[{"test":"bool_property","value":true}],"properties":{"test":{"type":"string","title":"Test Property","description":"Tests for the presence of a property of the subject entity."},"operator":{"$ref":"#/definitions/E","description":"(Optionall) The comparison to apply with `value`.","default":"equals","title":"Operator"},"subject":{"$ref":"#/definitions/F","description":"(Optional) The subject of this filter test.","default":"self","title":"Subject"},"value":{"title":"Value","type":"string","description":"(Required) The property name to look for."}}},"CH":{"type":"object","title":"Has Ranged Weapon","description":"Returns true when the subject entity is holding a ranged weapon like a bow or crossbow.","properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"True or false.","type":"boolean","default":true,"title":"Value"}},"examples":[{"test":"has_ranged_weapon","value":true}]},"CI":{"type":"object","title":"Has Silk Touch","description":"Tests if the subject is holding an item with silk touch.","properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"True or false.","type":"boolean","default":true,"title":"Value"}},"examples":[{"test":"has_silk_touch","subject":"other","value":true}]},"CJ":{"type":"object","title":"Has Tag","description":"Returns true if the subject entity has the tag provided.","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"Returns true if the subject entity has the tag provided."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"type":"string","description":"The tag as a string.","pattern":"[a-zA-Z0-9_]+","title":"Value"}},"examples":[{"test":"has_tag","value":"example"}]},"DA":{"type":"object","title":"Has Target","description":"Returns true if the subject entity has a valid target.","properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"True or false.","type":"boolean","default":true,"title":"Value"}},"examples":[{"test":"has_target","value":true}]},"DB":{"type":"object","title":"Has Trade Supply","description":"Tests whether the target has any trade supply left. Will return false if the target cannot be traded with.","properties":{"test":{"type":"string","title":"Test Property","description":"Tests whether the target has any trade supply left. Will return false if the target cannot be traded with."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"has_trade_supply","value":true}]},"DC":{"type":"object","title":"Home Distance","description":"Tests the distance between the subject and its home. Returns false if the subject has no home or if their home is in a different dimension.","required":["value"],"properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"(Required) A floating point value.","type":"number","default":true,"title":"Value"}}},"DD":{"type":"object","title":"Hourly Clock Time","description":"Compares the current 24 hour time with an int value in the range[0, 24000].","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"Compares the current 24 hour time with an int value in the range[0, 24000].","const":"hourly_clock_time"},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"type":"integer","description":"(Required) An integer value set between 0 and 24000.","minimum":0,"maximum":24000,"title":"Value"}},"examples":[{"test":"hourly_clock_time","value":0}]},"DE":{"type":"object","title":"In Block","description":"Returns true when the subject entity is inside a specified Block type.","properties":{"test":{"type":"string","title":"Test Property","description":"Returns true when the subject entity is inside a specified Block type."},"operator":{"$ref":"#/definitions/E","description":"(Optional) The comparison to apply with `value`.","default":"equals","title":"Operator"},"subject":{"$ref":"#/definitions/F","description":"(Optional) The subject of this filter test.","default":"self","title":"Subject"},"value":{"type":"string","description":"(Optional) A string value.","title":"Value"}},"examples":[{"test":"in_block","value":"minecraft:water"}]},"DF":{"type":"object","title":"In Caravan","description":"Returns true if the subject entity is in a caravan.","properties":{"test":{"type":"string","title":"Test Property","description":"Returns true if the subject entity is in a caravan."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"in_caravan","value":true}]},"DG":{"type":"object","title":"In Clouds","description":"Returns true when the subject entity is in the clouds.","properties":{"test":{"type":"string","title":"Test Property","description":"Returns true when the subject entity is in the clouds."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"in_clouds","value":true}]},"DH":{"type":"object","title":"In Contact With Water","description":"Returns true when the subject entity in contact with any water: water, rain, splash water bottle.","properties":{"test":{"type":"string","title":"Test Property","description":"Returns true when the subject entity in contact with any water: water, rain, splash water bottle."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"(Optional) true or false.","type":"boolean","default":true}},"examples":[{"test":"in_contact_with_water","value":true}]},"DI":{"type":"object","title":"In Lava","description":"Returns true when the subject entity is in lava.","properties":{"test":{"type":"string","title":"Test Property","description":"Returns true when the subject entity is in lava."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"in_lava","value":true}]},"DJ":{"type":"object","title":"In Nether","description":"Returns true when the subject entity is in Nether.","properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"True or false.","type":"boolean","default":true,"title":"Value"}},"examples":[{"test":"in_nether","value":true}]},"EA":{"type":"object","title":"In Overworld","description":"Returns true when the subject entity is in Overworld.","properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"True or false.","type":"boolean","default":true,"title":"Value"}},"examples":[{"test":"in_overworld","value":true},{"test":"in_overworld"}]},"EB":{"type":"object","title":"In Water Or Rain","description":"Returns true when the subject entity is in water or rain.","properties":{"test":{"type":"string","title":"Test Property","description":"Returns true when the subject entity is in water or rain."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"in_water_or_rain","value":true}]},"EC":{"type":"object","title":"In Water","description":"Returns true when the subject entity is in water.","properties":{"test":{"type":"string","title":"Test Property","description":"Returns true when the subject entity is in water."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"in_water","value":true}]},"ED":{"type":"object","title":"Inactivity Timer","description":"Tests if the specified duration in seconds of inactivity for despawning has been reached.","required":["value"],"properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"The Family name to look for.","type":"integer","title":"Value"}},"examples":[{"test":"inactivity_timer","value":0}]},"EE":{"type":"object","title":"Int Property","description":"Returns true when the integer actor property matches the value provided.","required":["value","domain"],"examples":[{"test":"int_property","value":1}],"properties":{"test":{"type":"string","title":"Test Property","description":"Returns true when the integer actor property matches the value provided."},"domain":{"description":"(Required) The property name to look for","title":"Operator","type":"string"},"operator":{"$ref":"#/definitions/E","description":"(Optional) The comparison to apply with `value`.","default":"equals","title":"Operator"},"subject":{"$ref":"#/definitions/F","description":"(Optional) The subject of this filter test.","default":"self","title":"Subject"},"value":{"type":"integer","title":"Value","description":"(Required) A integer value."}}},"EF":{"type":"object","title":"Is Altitude","description":"Tests the current altitude against a provided value. 0= bedrock elevation.","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"Tests the current altitude against a provided value. 0= bedrock elevation."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"type":"integer","description":"The altitude value to compare with.","minimum":0,"title":"Value"}},"examples":[{"test":"example","value":0}]},"EG":{"type":"object","title":"Is Avoiding Mobs","description":"Returns true if the subject entity is fleeing from other mobs.","properties":{"test":{"type":"string","title":"Test Property","description":"Returns true if the subject entity is fleeing from other mobs."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"example","value":true}]},"EH":{"type":"object","title":"Is Biome","description":"Tests whether the Subject is currently in the named biome.","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"Tests whether the Subject is currently in the named biome."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"The biome type to test.","title":"Value","type":"string"}}},"EI":{"type":"object","title":"Is Block","description":"Returns true when the block has the given name.","required":["value"],"properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"The Family name to look for.","type":"string","title":"Value"}},"examples":[{"test":"is_block","subject":"block","value":"minecraft:sweet_berry_bush"}]},"EJ":{"type":"object","title":"Is Bound To Creaking Heart","description":"Tests that the Creaking Heart that spawned the subject Creaking still exists.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_bound_to_creaking_heart","value":false}]},"FA":{"type":"object","title":"Is Brightness","description":"Tests the current brightness against a provided value in the range (0.0f, 1.0f).","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"Tests the current brightness against a provided value in the range (0.0f, 1.0f)."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"The brightness value to compare with.","type":"number","minimum":0.0,"maximum":1.0,"title":"Value"}},"examples":[{"test":"is_brightness","value":0.0}]},"FB":{"type":"object","title":"Is Climbing","description":"Returns true if the subject entity is climbing.","properties":{"test":{"type":"string","title":"Test Property","description":"Returns true if the subject entity is climbing."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_climbing","value":true}]},"FC":{"type":"object","title":"Is Color","description":"Returns true if the subject entity is the named color.","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"Returns true if the subject entity is the named color."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"The Palette Color to test.","type":"string","enum":["black","blue","brown","cyan","gray","green","light_blue","light_green","magenta","orange","pink","purple","red","silver","white","yellow"],"title":"Value"}},"examples":[{"test":"is_color","value":"black"}]},"FD":{"type":"object","title":"Is Daytime","description":"Returns true during the daylight hours.","properties":{"test":{"type":"string","title":"Test Property","description":"Returns true during the daylight hours."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_daytime","value":true}]},"FE":{"type":"object","title":"Is Difficulty","description":"Tests the current difficulty level of the game.","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"Tests the current difficulty level of the game."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"The game's difficulty level to test.","type":"string","enum":["easy","hard","normal","peaceful"],"title":"Value"}},"examples":[{"test":"is_difficulty","value":"easy"}]},"FF":{"type":"object","title":"Is Family","description":"Returns true when the subject entity is a member of the named family.","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"Returns true when the subject entity is a member of the named family."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"The Family name to look for.","type":"string","title":"Value"}},"examples":[{"test":"is_family","value":"monster"}]},"FG":{"type":"object","title":"Is Game Rule","description":"Tests whether a named game rule is active.","required":["domain","value"],"properties":{"domain":{"description":"The Game Rule to test.","title":"Domain","examples":["commandBlockOutput","commandBlocksEnabled","doDaylightCycle","doEntityDrops","doFireTick","doImmediateRespawn","doInsomnia","doMobLoot","doMobSpawning","doTileDrops","doWeatherCycle","drowningDamage","fallDamage","fireDamage","freezeDamage","functionCommandLimit","keepInventory","maxCommandChainLength","mobGriefing","naturalRegeneration","pvp","randomTickSpeed","respawnblocksexplode","sendCommandFeedback","showCoordinates","showDeathMessages","showTags","spawnRadius","tntExplodes"]},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"Tests whether a named game rule is active.","default":true,"type":"boolean","title":"Value"}},"examples":[{"test":"is_game_rule","domain":"domobspawning","value":false}]},"FH":{"type":"object","title":"Is Humid","description":"Tests whether the Subject is in an area with humidity.","properties":{"test":{"type":"string","title":"Test Property","description":"Tests whether the Subject is in an area with humidity."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_humid","value":true}]},"FI":{"type":"object","title":"Is Immobile","description":"Returns true if the subject entity is immobile. An entity is immobile if it lacks AI goals, has just changed dimensions or if it is a mob and has no health.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_immobile","value":true}]},"FJ":{"type":"object","title":"Is In Village","description":"Tests whether the Subject is inside the bounds of a village.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_in_village","value":true}]},"GA":{"type":"object","title":"Is Leashed To","description":"Returns true if the subject entity leashed to the calling entity.","properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"True or false.","type":"boolean","default":true,"title":"Value"}},"examples":[{"test":"is_leashed_to","value":true}]},"GB":{"type":"object","title":"Is Leashed","description":"Returns true if the subject entity is leashed.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_leashed","value":true}]},"GC":{"type":"object","title":"Is Mark Variant","description":"Returns true if the subject entity is the mark variant number provided.","additionalProperties":false,"properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"type":"integer","description":"The altitude value to compare with.","title":"Value"}},"examples":[{"test":"is_mark_variant","value":0}]},"GD":{"type":"object","title":"In Nether","description":"Tests if the subject is not at full health.","properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"True or false.","type":"boolean","default":true,"title":"Value"}},"examples":[{"test":"is_missing_health","value":true}]},"GE":{"type":"object","title":"Is Moving","description":"Returns true if the subject entity is moving.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_moving","value":true}]},"GF":{"type":"object","title":"Is Owner","description":"Returns true if the subject entity is the owner of the calling entity.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_owner","value":true}]},"GG":{"type":"object","title":"Is Persistent","description":"Tests if the subject's persistence matches the bool value passed in.","properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"True or false.","type":"boolean","default":true,"title":"Value"}},"examples":[{"test":"is_persistent","value":true}]},"GH":{"type":"object","title":"Is Riding Self","description":"Returns true if the subject entity is riding the calling entity.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_riding_self"}]},"GI":{"type":"object","title":"Is Riding","description":"Returns true if the subject entity is riding on another entity.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_riding","value":true}]},"GJ":{"type":"object","title":"Is Skin Id","description":"Returns true if the subject entity is the skin id number provided.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"type":"integer","description":"The altitude value to compare with.","title":"Value"}},"examples":[{"test":"is_skin_id","value":0}]},"HA":{"type":"object","title":"Is Sleeping","description":"Tests whether the Subject is sleeping.","properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"True or false.","type":"boolean","default":true,"title":"Value"}},"examples":[{"test":"is_sleeping","value":true}]},"HB":{"type":"object","title":"Is Sneak Held","description":"Returns true if the subject entity has the sneak input held.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_sneak_held","value":true}]},"HC":{"type":"object","title":"Is Sneaking","description":"Returns true if the subject entity is sneaking.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_sneaking","value":true}]},"HD":{"type":"object","title":"Is Snow Covered","description":"Tests whether the Subject is in an area with snow cover.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_snow_covered","value":true}]},"HE":{"type":"object","title":"Is Sitting","description":"Returns true if the subject entity is sitting","properties":{"test":{"type":"string","title":"Test Property","description":"Returns true if the subject entity is sitting."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_sitting","value":true}]},"HF":{"type":"object","title":"Is Target","description":"Returns true if the subject entity is the target of the calling entity.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_target","value":true}]},"HG":{"type":"object","title":"Is Target","description":"Tests whether the current temperature is a given type.","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"The Biome temperature catagory to test.","type":"string","enum":["cold","mild","ocean","warm"],"title":"Value"}},"examples":[{"test":"is_temperature_type","value":"cold"}]},"HH":{"type":"object","title":"Is Temperature Value","description":"Tests the current temperature against a provided value in the range (0.0, 1.0) where 0.0f is the coldest temp and 1.0f is the hottest.","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"The Biome temperature value to compare with.","type":"number","minimum":0.0,"maximum":1.0,"title":"Value"}},"examples":[{"test":"is_temperature_value","value":0.0}]},"HI":{"type":"object","title":"Is Underground","description":"Returns true when the subject entity is underground. An entity is considered underground if there are non-solid blocks above it.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_underground","value":true}]},"HJ":{"type":"object","title":"Is Underwater","description":"Returns true when the subject entity is under water. An entity is considered underwater if it is completely submerged in water blocks.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_underwater","value":true}]},"IA":{"type":"object","title":"Is Variant","description":"Returns true if the subject entity is the variant number provided.","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"type":"integer","description":"The altitude value to compare with.","title":"Value"}},"examples":[{"test":"is_variant","value":0}]},"IB":{"type":"object","title":"Is Visible","description":"Returns true if the subject entity is visible.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"is_visible","value":true}]},"IC":{"type":"object","title":"Is Waterlogged","description":"Tests if the subject block is submerged in water.","required":["value"],"properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"true or false.","type":"boolean","title":"Value"}},"examples":[{"test":"light_level","value":0}]},"ID":{"type":"object","title":"Light Level","description":"Tests is the mob is outside of the specified light level range (0, 16).","required":["value"],"properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"An integer value.","type":"integer","title":"Value","minimum":0,"maximum":16}},"examples":[{"test":"light_level","value":0}]},"IE":{"type":"object","title":"Moon Intensity","description":"Compares the current moon intensity with a float value in the range (0.0, 1.0)","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"A floating point value.","type":"number","minimum":0,"maximum":1,"title":"Value"}},"examples":[{"test":"moon_intensity","value":0.0}]},"IF":{"type":"object","title":"Moon Phase","description":"Compares the current moon phase with an integer value in the range (0, 7).","required":["value"],"properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"type":"integer","description":"An integer value.","minimum":0,"maximum":7,"title":"Value"}},"examples":[{"test":"moon_phase","value":0}]},"IG":{"type":"object","title":"On Ground","description":"Returns true when the subject entity is on ground.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"on_ground","value":true}]},"IH":{"type":"object","title":"On Ladder","description":"Returns true when the subject entity is on a ladder.","properties":{"test":{"type":"string","title":"Test Property","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"title":"Value","description":"True or false.","type":"boolean","default":true}},"examples":[{"test":"on_ladder","value":true}]},"II":{"type":"object","title":"Random Chance","description":"Returns true if the random chance rolls 0 out of a specified Maximum range.","required":["value"],"properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"An integer value.","type":"integer","title":"Value"}},"examples":[{"test":"random_chance","value":0}]},"IJ":{"type":"object","title":"Rider Count","description":"Returns the number of riders on this entity.","required":["value"],"properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"An integer value.","type":"integer","title":"Value"}},"examples":[{"test":"rider_count","value":0}]},"JA":{"type":"object","title":"Surface Mob","description":"Tests if the subject is a surface mob.","properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"True or false.","type":"boolean","default":true,"title":"Value"}},"examples":[{"test":"surface_mob","value":true}]},"JB":{"type":"object","title":"Taking Fire Damage","description":"Tests if the subject is taking fire damage. Requires the damage_sensor component","properties":{"test":{"type":"string","title":"Test","description":"Tests if the subject is taking fire damage. Requires the damage_sensor component"},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"True or false.","type":"boolean","default":true,"title":"Value"}},"examples":[{"test":"taking_fire_damage","value":true},{"test":"taking_fire_damage"}]},"JC":{"type":"object","title":"Target Distance","description":"Tests the distance between the calling entity and its target.","required":["value"],"properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"(Required) A floating point value.","type":"number","default":true,"title":"Value"}}},"JD":{"type":"object","title":"Owner Distance","description":"Tests the distance between the subject and its owner. Returns false if there is no owner.","required":["value"],"properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"(Required) A floating point value.","type":"number","default":true,"title":"Value"}}},"JE":{"type":"object","title":"Trusts","description":"Returns true if the subject is trusted by entity.","properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"True or false.","type":"boolean","default":true,"title":"Value"}},"examples":[{"test":"trusts","value":true}]},"JF":{"type":"object","title":"Weather At Position","description":"Tests the current weather, at the actor's position, against a provided weather value.","required":["value"],"properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"The Family name to look for.","type":"string","title":"Value","examples":["thunderstorm"]}},"examples":[{"test":"weather_at_position","value":"thunderstorm"}]},"JG":{"type":"object","title":"Weather","description":"Tests for the current weather state the entity is experiencing.","required":["value"],"properties":{"test":{"type":"string","title":"Test","description":"The test property."},"operator":{"$ref":"#/definitions/E"},"subject":{"$ref":"#/definitions/F"},"value":{"description":"The Family name to look for.","type":"string","title":"Value","examples":["clear","thunderstorm"]}},"examples":[{"test":"weather","value":"clear"}]},"C":{"title":"Filters","$ref":"#/definitions/C_groups_spec","examples":[{"test":"is_family","subject":"other","value":"example"},{"test":"has_tag","value":"example"},[]]},"JJ":{"title":"Vertical Anchor","description":"A vertical anchor defines a point in the dimension to offset from. There are four types and each has it own individually named property","type":"object","additionalProperties":false,"properties":{"absolute":{"title":"Absolute","description":"An absolute height.","type":"integer"},"above_bottom":{"title":"Above Bottom","description":"A relative height above the bottom of the dimension.","type":"integer","minimum":0},"below_top":{"title":"Below Top","description":"A relative height below the top of the dimension.","type":"integer","minimum":0},"from_sea":{"title":"From Sea","description":"A relative height starting at the dimensions sea level.","type":"integer"}}},"JI":{"title":"Constant","description":"Constant anchor point.","type":"object","properties":{"type":{"title":"Type","type":"string","const":"constant"},"value":{"$ref":"#/definitions/JJ"}},"required":["value","type"]},"BAA":{"title":"Uniform","description":"When the type is \"uniform\" it now also expects two vertical anchor points to use as the minimum and maximum heights over which to perform the uniform distribution.","type":"object","properties":{"type":{"title":"Type","type":"string","const":"uniform"},"min":{"$ref":"#/definitions/JJ"},"max":{"$ref":"#/definitions/JJ"}},"required":["min","max","type"]},"JH":{"title":"Height Provider","description":"The type of the the height provider. These values determine the format of the start_height JSON Object.","type":"object","properties":{"type":{"title":"Type","type":"string","enum":["constant","uniform"]}},"allOf":[{"if":{"properties":{"processor_type":{"const":"constant"}}},"then":{"$ref":"#/definitions/JI"}},{"if":{"properties":{"processor_type":{"const":"uniform"}}},"then":{"$ref":"#/definitions/BAA"}}]},"BAB_pool_alias":{"title":"Pool Alias","description":"Used to rewire jigsaw pool connections by redirecting pool references in an individual structure. Done by specifying aliases for Template Pools. This can allow for themes across a full structure.","type":"object","properties":{"type":{"title":"Type","type":"string","enum":["direct","random","random_group"]}},"allOf":[{"if":{"properties":{"processor_type":{"const":"direct"}}},"then":{"$ref":"#/definitions/BAC"}},{"if":{"properties":{"processor_type":{"const":"random"}}},"then":{"$ref":"#/definitions/BAD"}},{"if":{"properties":{"processor_type":{"const":"random_group"}}},"then":{"$ref":"#/definitions/BAB_random_group"}}]},"BAB_random_group":{"title":"Random Group","type":"object","properties":{"type":{"title":"Type","type":"string","const":"random_group"},"groups":{"title":"Groups","description":"A weighted random list containing items that contain pool alias items. The pool alias types can be any valid type except random_group.","type":"array","items":{"title":"Weighted Random Item","description":"A used by Weighted Random Lists.","type":"object","additionalProperties":false,"properties":{"data":{"title":"Data","description":"The data used when randomly selected.","$ref":"#/definitions/BAB_pool_alias"},"weight":{"title":"Weight","description":"The weight of the item relative to the total weight of all items in the list.","type":"integer","minimum":1}}}}},"required":["groups","type"]},"BAC":{"title":"Direct","type":"object","properties":{"type":{"title":"Type","type":"string","const":"direct"},"alias":{"title":"Alias","description":"The alias of the Template Pool to replace.","type":"string"},"target":{"title":"Target","description":"The Template Pool to substitute when matched.","type":"string"}},"required":["target","alias","type"]},"BAD":{"title":"Random","type":"object","properties":{"type":{"title":"Type","type":"string","const":"random"},"alias":{"title":"Alias","description":"The alias of the Template Pool to replace.","type":"string"},"targets":{"title":"Target","description":"The Template Pool to substitute when matched.","type":"array","items":{"title":"Weighted Random Item","description":"A used by Weighted Random Lists.","type":"object","additionalProperties":false,"properties":{"data":{"title":"Data","description":"The data used when randomly selected.","type":"string"},"weight":{"title":"Weight","description":"The weight of the item relative to the total weight of all items in the list.","type":"integer","minimum":1}}},"minItems":2,"maxItems":2}},"required":["targets","alias","type"]},"BAB":{"$ref":"#/definitions/BAB_pool_alias"},"B":{"type":"object","title":"Jigsaw","additionalProperties":false,"required":["description","max_depth","start_height","start_pool","step"],"properties":{"biome_filters":{"title":"Biome Filters","description":"Specifies the biomes in which the Jigsaw Structure can generate.","$ref":"#/definitions/C"},"description":{"title":"Description","description":"The description of this jigsaw.","type":"object","additionalProperties":false,"required":["identifier"],"properties":{"identifier":{"title":"Identifier","description":"Identifier of the Jigsaw Structure. This is used with commands such as /locate, as well as within Structure Set definitions to specify which Jigsaw Structures are included in a given set.","type":"string"}}},"heightmap_projection":{"title":"Heightmap Projection","description":"Heightmap used to calculate the relative start height. For example, a heightmap_projection of ocean_floor and a start_height of 10 means the Jigsaw Structure will begin generating 10 blocks above the ocean floor.","type":"string","enum":["ocean_floor","world_surface"]},"max_depth":{"title":"Max Depth","type":"integer","description":" The maximum recursion depth for Jigsaw Structure Generation. For example, a Jigsaw Structure that builds a road with a max_depth of 5 will only have paths that are a maximum of 5 structures templates in length in any given direction from the origin.","minimum":0.0,"maximum":20.0},"start_height":{"title":"Start Height","description":"Height at which the Jigsaw Structure's start_pool should begin.","$ref":"#/definitions/JH"},"start_pool":{"title":"Start Pool","type":"string","description":"The first Template Pool to use when generating the Jigsaw Structure."},"start_jigsaw_name":{"title":"Start Jigsaw Name","description":"The name of the Jigsaw Block from the start_pool to be placed first.","type":"string"},"max_distance_from_center":{"title":"Max Distance From Center","description":"The max distance from the jigsaw pieces to the structure start.","type":"integer","minimum":1,"maximum":128},"pool_aliases":{"title":"Pool Aliases","description":"Pool Aliases are used to determine which Template Pool can be a substitute.","type":"array","items":{"$ref":"#/definitions/BAB"}},"dimension_padding":{"anyOf":[{"title":"Dimension Padding","description":"Dimension padding prevents the structure from getting cut off at the top or bottom of the world.","type":"integer","minimum":0,"default":0},{"title":"Dimension Padding","description":"Dimension padding prevents the structure from getting cut off at the top or bottom of the world.","type":"object","additionalProperties":false,"properties":{"top":{"title":"Top","description":"Distance in blocks from the top of the dimension that may not be used by the Jigsaw Structure.","type":"integer","minimum":0,"default":0},"bottom":{"title":"Bottom","description":"Distance in blocks from the bottom of the dimension that may not be used by the Jigsaw Structure.","type":"integer","minimum":0,"default":0}}}]},"step":{"title":"Step","description":"Specifies the world generation phase in which the structure is generated. This is used as a grouping concept to keep similar world-generation features generally bundled together.","type":"string","enum":["fluid_springs","lakes","local_modifications","raw_generation","strongholds","surface_structures","top_layer_modification","underground_decoration","underground_ores","underground_structures","vegetal_decoration"]},"terrain_adaptation":{"title":"Terrain Adaptation","description":"How the terrain should adapt relative to the generated Jigsaw Structure.","type":"string","enum":["beard_box","beard_thin","bury","encapsulate","none"]},"liquid_settings":{"title":"Liquid Settings","description":"How to handle waterloggable blocks overlapping with existing liquid.","type":"string","enum":["apply_waterlogging","ignore_waterlogging"]}}}}}